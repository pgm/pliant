// Code generated by protoc-gen-go.
// source: data.proto
// DO NOT EDIT!

/*
Package v2 is a generated protocol buffer package.

It is generated from these files:
	data.proto

It has these top-level messages:
	FileMetadata
	LeafRecordEntry
	LeafRecord
	GetKeyReq
	GetKeyResp
	GetLocalPathReq
	GetLocalPathResp
	PutLocalPathReq
	LinkReq
	UnlinkReq
	SimpleResp
	Request
	CacheEntry
	RootLog
*/
package v2

import proto "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type Request_Type int32

const (
	Request_GET_KEY        Request_Type = 1
	Request_GET_LOCAL_PATH Request_Type = 2
	Request_PUT_LOCAL_PATH Request_Type = 3
	Request_LINK           Request_Type = 4
	Request_UNLINK         Request_Type = 5
)

var Request_Type_name = map[int32]string{
	1: "GET_KEY",
	2: "GET_LOCAL_PATH",
	3: "PUT_LOCAL_PATH",
	4: "LINK",
	5: "UNLINK",
}
var Request_Type_value = map[string]int32{
	"GET_KEY":        1,
	"GET_LOCAL_PATH": 2,
	"PUT_LOCAL_PATH": 3,
	"LINK":           4,
	"UNLINK":         5,
}

func (x Request_Type) Enum() *Request_Type {
	p := new(Request_Type)
	*p = x
	return p
}
func (x Request_Type) String() string {
	return proto.EnumName(Request_Type_name, int32(x))
}
func (x *Request_Type) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Request_Type_value, data, "Request_Type")
	if err != nil {
		return err
	}
	*x = Request_Type(value)
	return nil
}

type CacheEntry_SourceType int32

const (
	CacheEntry_INVALID CacheEntry_SourceType = 0
	CacheEntry_LOCAL   CacheEntry_SourceType = 2
	CacheEntry_REMOTE  CacheEntry_SourceType = 1
)

var CacheEntry_SourceType_name = map[int32]string{
	0: "INVALID",
	2: "LOCAL",
	1: "REMOTE",
}
var CacheEntry_SourceType_value = map[string]int32{
	"INVALID": 0,
	"LOCAL":   2,
	"REMOTE":  1,
}

func (x CacheEntry_SourceType) Enum() *CacheEntry_SourceType {
	p := new(CacheEntry_SourceType)
	*p = x
	return p
}
func (x CacheEntry_SourceType) String() string {
	return proto.EnumName(CacheEntry_SourceType_name, int32(x))
}
func (x *CacheEntry_SourceType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CacheEntry_SourceType_value, data, "CacheEntry_SourceType")
	if err != nil {
		return err
	}
	*x = CacheEntry_SourceType(value)
	return nil
}

type RootLog_EntryType int32

const (
	RootLog_INVALID RootLog_EntryType = 0
	RootLog_LEASE   RootLog_EntryType = 1
	RootLog_LABEL   RootLog_EntryType = 2
)

var RootLog_EntryType_name = map[int32]string{
	0: "INVALID",
	1: "LEASE",
	2: "LABEL",
}
var RootLog_EntryType_value = map[string]int32{
	"INVALID": 0,
	"LEASE":   1,
	"LABEL":   2,
}

func (x RootLog_EntryType) Enum() *RootLog_EntryType {
	p := new(RootLog_EntryType)
	*p = x
	return p
}
func (x RootLog_EntryType) String() string {
	return proto.EnumName(RootLog_EntryType_name, int32(x))
}
func (x *RootLog_EntryType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(RootLog_EntryType_value, data, "RootLog_EntryType")
	if err != nil {
		return err
	}
	*x = RootLog_EntryType(value)
	return nil
}

type FileMetadata struct {
	Size             *int64 `protobuf:"varint,1,opt,name=size" json:"size,omitempty"`
	Key              []byte `protobuf:"bytes,2,opt,name=key" json:"key,omitempty"`
	CreationTime     *int64 `protobuf:"varint,3,opt,name=creation_time" json:"creation_time,omitempty"`
	IsDir            *bool  `protobuf:"varint,4,opt" json:"IsDir,omitempty"`
	TotalSize        *int64 `protobuf:"varint,5,opt,name=totalSize" json:"totalSize,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *FileMetadata) Reset()         { *m = FileMetadata{} }
func (m *FileMetadata) String() string { return proto.CompactTextString(m) }
func (*FileMetadata) ProtoMessage()    {}

func (m *FileMetadata) GetSize() int64 {
	if m != nil && m.Size != nil {
		return *m.Size
	}
	return 0
}

func (m *FileMetadata) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *FileMetadata) GetCreationTime() int64 {
	if m != nil && m.CreationTime != nil {
		return *m.CreationTime
	}
	return 0
}

func (m *FileMetadata) GetIsDir() bool {
	if m != nil && m.IsDir != nil {
		return *m.IsDir
	}
	return false
}

func (m *FileMetadata) GetTotalSize() int64 {
	if m != nil && m.TotalSize != nil {
		return *m.TotalSize
	}
	return 0
}

type LeafRecordEntry struct {
	Name             *string       `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Metadata         *FileMetadata `protobuf:"bytes,2,req,name=metadata" json:"metadata,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *LeafRecordEntry) Reset()         { *m = LeafRecordEntry{} }
func (m *LeafRecordEntry) String() string { return proto.CompactTextString(m) }
func (*LeafRecordEntry) ProtoMessage()    {}

func (m *LeafRecordEntry) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *LeafRecordEntry) GetMetadata() *FileMetadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

type LeafRecord struct {
	Entries          []*LeafRecordEntry `protobuf:"bytes,1,rep,name=entries" json:"entries,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *LeafRecord) Reset()         { *m = LeafRecord{} }
func (m *LeafRecord) String() string { return proto.CompactTextString(m) }
func (*LeafRecord) ProtoMessage()    {}

func (m *LeafRecord) GetEntries() []*LeafRecordEntry {
	if m != nil {
		return m.Entries
	}
	return nil
}

type GetKeyReq struct {
	Path             *string `protobuf:"bytes,1,req,name=path" json:"path,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GetKeyReq) Reset()         { *m = GetKeyReq{} }
func (m *GetKeyReq) String() string { return proto.CompactTextString(m) }
func (*GetKeyReq) ProtoMessage()    {}

func (m *GetKeyReq) GetPath() string {
	if m != nil && m.Path != nil {
		return *m.Path
	}
	return ""
}

type GetKeyResp struct {
	IsSuccess        *bool   `protobuf:"varint,1,req,name=isSuccess" json:"isSuccess,omitempty"`
	Key              *string `protobuf:"bytes,2,opt,name=key" json:"key,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GetKeyResp) Reset()         { *m = GetKeyResp{} }
func (m *GetKeyResp) String() string { return proto.CompactTextString(m) }
func (*GetKeyResp) ProtoMessage()    {}

func (m *GetKeyResp) GetIsSuccess() bool {
	if m != nil && m.IsSuccess != nil {
		return *m.IsSuccess
	}
	return false
}

func (m *GetKeyResp) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

type GetLocalPathReq struct {
	Path             *string `protobuf:"bytes,1,req,name=path" json:"path,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GetLocalPathReq) Reset()         { *m = GetLocalPathReq{} }
func (m *GetLocalPathReq) String() string { return proto.CompactTextString(m) }
func (*GetLocalPathReq) ProtoMessage()    {}

func (m *GetLocalPathReq) GetPath() string {
	if m != nil && m.Path != nil {
		return *m.Path
	}
	return ""
}

type GetLocalPathResp struct {
	IsSuccess        *bool   `protobuf:"varint,1,req,name=isSuccess" json:"isSuccess,omitempty"`
	Path             *string `protobuf:"bytes,2,opt,name=path" json:"path,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GetLocalPathResp) Reset()         { *m = GetLocalPathResp{} }
func (m *GetLocalPathResp) String() string { return proto.CompactTextString(m) }
func (*GetLocalPathResp) ProtoMessage()    {}

func (m *GetLocalPathResp) GetIsSuccess() bool {
	if m != nil && m.IsSuccess != nil {
		return *m.IsSuccess
	}
	return false
}

func (m *GetLocalPathResp) GetPath() string {
	if m != nil && m.Path != nil {
		return *m.Path
	}
	return ""
}

// responses with SimpleResp
type PutLocalPathReq struct {
	Path             *string `protobuf:"bytes,1,req,name=path" json:"path,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *PutLocalPathReq) Reset()         { *m = PutLocalPathReq{} }
func (m *PutLocalPathReq) String() string { return proto.CompactTextString(m) }
func (*PutLocalPathReq) ProtoMessage()    {}

func (m *PutLocalPathReq) GetPath() string {
	if m != nil && m.Path != nil {
		return *m.Path
	}
	return ""
}

// responses with SimpleResp
type LinkReq struct {
	Key              *string `protobuf:"bytes,1,req,name=key" json:"key,omitempty"`
	Path             *string `protobuf:"bytes,2,req,name=path" json:"path,omitempty"`
	IsDir            *bool   `protobuf:"varint,3,req,name=isDir" json:"isDir,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *LinkReq) Reset()         { *m = LinkReq{} }
func (m *LinkReq) String() string { return proto.CompactTextString(m) }
func (*LinkReq) ProtoMessage()    {}

func (m *LinkReq) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

func (m *LinkReq) GetPath() string {
	if m != nil && m.Path != nil {
		return *m.Path
	}
	return ""
}

func (m *LinkReq) GetIsDir() bool {
	if m != nil && m.IsDir != nil {
		return *m.IsDir
	}
	return false
}

// responses with SimpleResp
type UnlinkReq struct {
	Path             *string `protobuf:"bytes,1,req,name=path" json:"path,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *UnlinkReq) Reset()         { *m = UnlinkReq{} }
func (m *UnlinkReq) String() string { return proto.CompactTextString(m) }
func (*UnlinkReq) ProtoMessage()    {}

func (m *UnlinkReq) GetPath() string {
	if m != nil && m.Path != nil {
		return *m.Path
	}
	return ""
}

type SimpleResp struct {
	IsSuccess        *bool  `protobuf:"varint,1,req,name=isSuccess" json:"isSuccess,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SimpleResp) Reset()         { *m = SimpleResp{} }
func (m *SimpleResp) String() string { return proto.CompactTextString(m) }
func (*SimpleResp) ProtoMessage()    {}

func (m *SimpleResp) GetIsSuccess() bool {
	if m != nil && m.IsSuccess != nil {
		return *m.IsSuccess
	}
	return false
}

type Request struct {
	Type             *Request_Type    `protobuf:"varint,1,req,name=type,enum=v2.Request_Type" json:"type,omitempty"`
	GetKey           *GetKeyReq       `protobuf:"bytes,2,opt" json:"GetKey,omitempty"`
	GetLocalPath     *GetLocalPathReq `protobuf:"bytes,3,opt" json:"GetLocalPath,omitempty"`
	PutLocalPath     *PutLocalPathReq `protobuf:"bytes,4,opt" json:"PutLocalPath,omitempty"`
	Link             *LinkReq         `protobuf:"bytes,5,opt" json:"Link,omitempty"`
	Unlink           *UnlinkReq       `protobuf:"bytes,6,opt" json:"Unlink,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}

func (m *Request) GetType() Request_Type {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Request_GET_KEY
}

func (m *Request) GetGetKey() *GetKeyReq {
	if m != nil {
		return m.GetKey
	}
	return nil
}

func (m *Request) GetGetLocalPath() *GetLocalPathReq {
	if m != nil {
		return m.GetLocalPath
	}
	return nil
}

func (m *Request) GetPutLocalPath() *PutLocalPathReq {
	if m != nil {
		return m.PutLocalPath
	}
	return nil
}

func (m *Request) GetLink() *LinkReq {
	if m != nil {
		return m.Link
	}
	return nil
}

func (m *Request) GetUnlink() *UnlinkReq {
	if m != nil {
		return m.Unlink
	}
	return nil
}

type CacheEntry struct {
	Filename         *string                `protobuf:"bytes,1,req" json:"Filename,omitempty"`
	Source           *CacheEntry_SourceType `protobuf:"varint,2,req,enum=v2.CacheEntry_SourceType" json:"Source,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *CacheEntry) Reset()         { *m = CacheEntry{} }
func (m *CacheEntry) String() string { return proto.CompactTextString(m) }
func (*CacheEntry) ProtoMessage()    {}

func (m *CacheEntry) GetFilename() string {
	if m != nil && m.Filename != nil {
		return *m.Filename
	}
	return ""
}

func (m *CacheEntry) GetSource() CacheEntry_SourceType {
	if m != nil && m.Source != nil {
		return *m.Source
	}
	return CacheEntry_INVALID
}

type RootLog struct {
	Type             *RootLog_EntryType `protobuf:"varint,1,req,enum=v2.RootLog_EntryType" json:"Type,omitempty"`
	Name             *string            `protobuf:"bytes,2,opt" json:"Name,omitempty"`
	Key              []byte             `protobuf:"bytes,3,opt" json:"Key,omitempty"`
	Expiry           *uint64            `protobuf:"varint,4,opt" json:"Expiry,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *RootLog) Reset()         { *m = RootLog{} }
func (m *RootLog) String() string { return proto.CompactTextString(m) }
func (*RootLog) ProtoMessage()    {}

func (m *RootLog) GetType() RootLog_EntryType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return RootLog_INVALID
}

func (m *RootLog) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *RootLog) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *RootLog) GetExpiry() uint64 {
	if m != nil && m.Expiry != nil {
		return *m.Expiry
	}
	return 0
}

func init() {
	proto.RegisterEnum("v2.Request_Type", Request_Type_name, Request_Type_value)
	proto.RegisterEnum("v2.CacheEntry_SourceType", CacheEntry_SourceType_name, CacheEntry_SourceType_value)
	proto.RegisterEnum("v2.RootLog_EntryType", RootLog_EntryType_name, RootLog_EntryType_value)
}
